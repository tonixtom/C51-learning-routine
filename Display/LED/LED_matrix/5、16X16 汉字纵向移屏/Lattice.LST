C51 COMPILER V9.01   LATTICE                                                               01/14/2014 09:35:23 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LATTICE
OBJECT MODULE PLACED IN Lattice.OBJ
COMPILER INVOKED BY: D:\KEIL\C51\BIN\C51.EXE Lattice.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************
   2          *                 
   3          *                                      ∆’÷–ø∆ºº
   4          --------------------------------------------------------------------------------
   5          *  µ —È √˚               : ∫∫◊÷“∆∂Øœ‘ æ
   6          *  µ—ÈÀµ√˜       : 
   7          * ¡¨Ω”∑Ω Ω       : º˚Ω”œﬂÕº
   8          * ◊¢    “‚               : 
   9          *******************************************************************************/
  10          
  11          #include <REG51.H>
  12          #include <intrins.h>
  13          #include "array.h"
  14          
  15          //--÷ÿ∂®“Â∫Ø ˝±‰¡ø--//
  16          #define uchar unsigned char
  17          #define uint  unsigned int
  18          #define ulong unsigned long
  19          
  20          //--∂®“ÂSPI“™ π”√µƒ IO--//
  21          sbit MOSIO = P3^4;
  22          sbit R_CLK = P3^5;
  23          sbit S_CLK = P3^6;
  24          
  25          //--»´æ÷∫Ø ˝…˘√˜--//
  26          void HC595SendData(  uchar BT3, uchar BT2,uchar BT1,uchar BT0);
  27                                                                                                                                                                                                  
  28          /*******************************************************************************
  29          * ∫Ø  ˝ √˚         : main
  30          * ∫Ø ˝π¶ƒ‹                 : ÷˜∫Ø ˝
  31          *  ‰    »Î         : Œﬁ
  32          *  ‰    ≥ˆ         : Œﬁ
  33          *******************************************************************************/
  34          
  35          void main(void)
  36          {   
  37   1              int k, j, ms;
  38   1              
  39   1              //--∂®“Â“ª∏ˆ÷∏’Î ˝◊È÷∏œÚ√ø∏ˆ∫∫◊÷--//
  40   1              uchar *p[] = 
  41   1                          {tab17, tab1, tab2, tab3, tab4, tab5, tab6, tab7, tab8,
  42   1                           tab9, tab10, tab11, tab12, tab13, tab14, tab15, tab16};                                            
  43   1              while(1)
  44   1              {
  45   2      
  46   2                      for(ms = 20; ms > 0; ms--)      //“∆∂Ø∂®∏Ò ±º‰…Ë÷√
  47   2                      {
  48   3                              for(k = 0; k < 16; k++) //œ‘ æ“ª∏ˆ◊÷
  49   3                              {                                                       
  50   4                                      HC595SendData(~(*(p[0] + 2*(k+j) + 1)),~(*(p[0] + 2*(k+j) )),tab0[2*k],tab0[2*k + 1]); //“ÚŒ™◊÷ƒ£»Ìº˛»
             -°µƒ ˝◊È «∏ﬂµÁ∆Ω”––ß£¨À˘“‘¡–“™»°∑¥             
  51   4                              }
  52   3                              
  53   3                              //--«Â∆¡--//
  54   3                              HC595SendData(0xff,0xff,0,0);                                                                              //«Â∆¡                
C51 COMPILER V9.01   LATTICE                                                               01/14/2014 09:35:23 PAGE 2   

  55   3                      } 
  56   2      
  57   2                      
  58   2                      j++;
  59   2                      if(j == (17*15) )
  60   2                      {
  61   3                              j = 0; 
  62   3                      }
  63   2                      
  64   2              }                                                                         
  65   1      }
  66          
  67          /*******************************************************************************
  68          * ∫Ø  ˝ √˚         : HC595SendData
  69          * ∫Ø ˝π¶ƒ‹                 : Õ®π˝595∑¢ÀÕÀƒ∏ˆ◊÷Ω⁄µƒ ˝æ›
  70          *  ‰    »Î         : BT3£∫µ⁄Àƒ∏ˆ595 ‰≥ˆ ˝÷µ
  71          *                  * BT2: µ⁄»˝∏ˆ595 ‰≥ˆ ˝÷µ
  72          *                  * BT1£∫µ⁄∂˛∏ˆ595 ‰≥ˆ ˝÷µ
  73          *                  * BT0£∫µ⁄“ª∏ˆ595 ‰≥ˆ ˝÷µ
  74          *  ‰    ≥ˆ         : Œﬁ
  75          *******************************************************************************/
  76          
  77          void HC595SendData(  uchar BT3, uchar BT2,uchar BT1,uchar BT0)
  78          {  
  79   1              uchar i;
  80   1              
  81   1              //--∑¢ÀÕµ⁄“ª∏ˆ◊÷Ω⁄--//
  82   1              for(i=0;i<8;i++)
  83   1              {
  84   2                      MOSIO = BT3 >> 7 ;      //¥”∏ﬂŒªµΩµÕŒª
  85   2                      BT3 <<= 1;
  86   2      
  87   2                      S_CLK = 0;
  88   2                      S_CLK = 1;              
  89   2              }
  90   1      
  91   1              //--∑¢ÀÕµ⁄“ª∏ˆ◊÷Ω⁄--//
  92   1              for(i=0;i<8;i++)
  93   1              {
  94   2                      MOSIO = BT2 >>7;                //¥”∏ﬂŒªµΩµÕŒª
  95   2                      BT2 <<= 1;
  96   2      
  97   2                      S_CLK = 0;
  98   2                      S_CLK = 1;      
  99   2              }
 100   1      
 101   1              //--∑¢ÀÕµ⁄“ª∏ˆ◊÷Ω⁄--//
 102   1              for(i=0;i<8;i++)
 103   1              {
 104   2                      MOSIO = BT1 >> 7;               //¥”∏ﬂŒªµΩµÕŒª
 105   2                      BT1 <<= 1;
 106   2                      S_CLK = 0;
 107   2                      S_CLK = 1;      
 108   2              }
 109   1      
 110   1              //--∑¢ÀÕµ⁄“ª∏ˆ◊÷Ω⁄--//
 111   1              for(i=0;i<8;i++)
 112   1              {
 113   2                      MOSIO = BT0 >> 7;               //¥”∏ﬂŒªµΩµÕŒª
 114   2                      BT0 <<= 1;
 115   2                      S_CLK = 0;
 116   2                      S_CLK = 1;
C51 COMPILER V9.01   LATTICE                                                               01/14/2014 09:35:23 PAGE 3   

 117   2              }
 118   1         
 119   1              //-- ‰≥ˆ--//
 120   1              R_CLK = 0; //set dataline low
 121   1              R_CLK = 1; //∆¨—°
 122   1              R_CLK = 0; //set dataline low
 123   1      }
 124          
 125          
 126          
 127          
 128          
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    308    ----
   CONSTANT SIZE    =    627    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      61
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
