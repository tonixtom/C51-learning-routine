C51 COMPILER V9.01   LCD_DRIVE                                                             09/18/2014 15:58:09 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD_DRIVE
OBJECT MODULE PLACED IN lcd_drive.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE lcd_drive.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "lcd_drive.h"
   2          
   3          /****************************************************************************
   4          *函数名：TFT_WriteCmd
   5          *输  入：cmd：命令
   6          *输  出：
   7          *功  能：写命令。
   8          ****************************************************************************/     
   9          
  10          void TFT_WriteCmd(uint cmd)
  11          {
  12   1              uchar cmdH, cmdL;
  13   1              cmdH = cmd >> 8;
  14   1              cmdL = cmd & 0x00FF;
  15   1              
  16   1              
  17   1              TFT_WR = 1;                       //初始化WR
  18   1              TFT_CS = 0;                       //打开片选
  19   1              
  20   1              TFT_RD = 1;           //选择写
  21   1              TFT_RS = 0;                       //选择命令
  22   1              
  23   1              TFT_DATAPORTH = cmdH; //放置命令数据
  24   1          TFT_DATAPORTL = cmdL; 
  25   1              
  26   1              TFT_WR = 0;                       //写入时序
  27   1              TFT_WR = 1;
  28   1      
  29   1              TFT_CS = 1;                       //关闭片选    
  30   1      }
  31          
  32          /****************************************************************************
  33          *函数名：TFT_WriteData
  34          *输  入： dat：数据
  35          *输  出：
  36          *功  能: 写数据。
  37          ****************************************************************************/     
  38          
  39          void TFT_WriteData(uint dat)
  40          {
  41   1              uchar datH, datL;
  42   1              datH = dat >> 8;
  43   1              datL = dat & 0x00FF;
  44   1              
  45   1              TFT_WR = 1;                       //初始化WR
  46   1              TFT_CS = 0;                       //打开片选
  47   1              
  48   1              TFT_RD = 1;           //选择写
  49   1              TFT_RS = 1;                       //选择发送数据
  50   1              
  51   1              TFT_DATAPORTH = datH;  //放置命令数据
  52   1          TFT_DATAPORTL = datL;       
  53   1      
  54   1              TFT_WR = 0;                       //写入时序
  55   1              TFT_WR = 1;
C51 COMPILER V9.01   LCD_DRIVE                                                             09/18/2014 15:58:09 PAGE 2   

  56   1              
  57   1              TFT_CS = 1;                       //关闭片选
  58   1      }
  59          
  60          /****************************************************************************
  61          *函数名：TFT_WriteColorData
  62          *输  入： dat：输入的颜色
  63          *输  出：
  64          *功  能: 写数据。
  65          ****************************************************************************/     
  66          
  67          void TFT_WriteColorData(uint dat)
  68          {
  69   1              uchar datH, datL, db8H, db8L;
  70   1          
  71   1          //-- 进行颜色转换 --//
  72   1          datL = dat & 0x00FF;
  73   1          db8L = (dat >> 4) & 0x01;
  74   1      
  75   1          datH = dat >> 11;
  76   1          datH <<= 1;
  77   1          datH |= dat >> 15;
  78   1          datH <<= 2;
  79   1          datH |= (dat >> 9) & 0x03;
  80   1          db8H = (dat >> 8) & 0x01;
  81   1      
  82   1      
  83   1              
  84   1              TFT_WR = 1;                       //初始化WR
  85   1              TFT_CS = 0;                       //打开片选
  86   1              
  87   1              TFT_RD = 1;           //选择写
  88   1              TFT_RS = 1;                       //选择发送数据
  89   1              
  90   1              TFT_DATAPORTH = datH;  //放置命令数据
  91   1          TFT_DATAPORTL = datL;       
  92   1      
  93   1      
  94   1              TFT_WR = 0;                       //写入时序
  95   1              TFT_WR = 1;
  96   1              
  97   1              TFT_CS = 1;                       //关闭片选
  98   1      }
  99          
 100          /****************************************************************************
 101          *函数名：TFT_WriteCmdData
 102          *输  入：cmd：命令
 103          *      ：dat：数据
 104          *输  出：
 105          *功  能：写命令， 写数据。
 106          ****************************************************************************/     
 107          
 108          void TFT_WriteCmdData(uint cmd, uint dat)
 109          {
 110   1              TFT_WriteCmd(cmd);
 111   1              TFT_WriteData(dat);
 112   1      }
 113          /****************************************************************************
 114          *函数名：TFT_Init
 115          *输  入：
 116          *输  出：
 117          *功  能：初始化TFT。
C51 COMPILER V9.01   LCD_DRIVE                                                             09/18/2014 15:58:09 PAGE 3   

 118          ****************************************************************************/     
 119          
 120          void TFT_Init(void)
 121          {
 122   1              uint i;
 123   1      
 124   1              TFT_RST = 1;
 125   1              for(i=500; i>0; i--);
 126   1              TFT_RST = 0;
 127   1              for(i=500; i>0; i--);
 128   1              TFT_RST = 1;
 129   1              for(i=5000; i>0; i--);
 130   1              
 131   1              TFT_CS = 0;
 132   1              
 133   1      //************* Start Initial Sequence **********//
 134   1              TFT_WriteCmdData(0x0702, 0x3008);   // Set internal timing 
 135   1              TFT_WriteCmdData(0x0705, 0x0012);   // Set internal timing 
 136   1              TFT_WriteCmdData(0x070b, 0x1213);   // Set internal timing
 137   1          TFT_WriteCmdData(0x0001, 0x0100);   // set SS and SM bit 
 138   1          TFT_WriteCmdData(0x0002, 0x0100);   // set 1 line inversion 
 139   1          TFT_WriteCmdData(0x0003, 0x1030);   // set GRAM write direction and BGR=1.  
 140   1          TFT_WriteCmdData(0x0008, 0x0808);   // set the back porch and front porch
 141   1          TFT_WriteCmdData(0x0009, 0x0000);   // set non-display area refresh cycle ISC[3:0]  
 142   1          TFT_WriteCmdData(0x000c, 0x0000);   // RGB interface setting
 143   1          TFT_WriteCmdData(0x000f, 0x0000);   // RGB interface polarity
 144   1      
 145   1        //*************Power On seence ****************// 
 146   1          TFT_WriteCmdData(0x0100, 0x0000);      // SAP, BT[3:0], AP, DSTB, SLP, STB 
 147   1          TFT_WriteCmdData(0x0102, 0x0000);      // DC1[2:0], DC0[2:0], VC[2:0] 
 148   1          TFT_WriteCmdData(0x0103, 0x0000);      // VREG1OUT voltage 
 149   1          TFT_WriteCmdData(0x0100, 0x1190);      // VDV[4:0] for VCOM amplitude 
 150   1              for(i=5000; i>0; i--);                 // Dis-charge capacitor power voltage 
 151   1          TFT_WriteCmdData(0x0101, 0x0137);      // SAP, BT[3:0], AP, DSTB, SLP, STB 
 152   1          TFT_WriteCmdData(0x0102, 0x01bc);      // DC1[2:0], DC0[2:0], VC[2:0] 
 153   1              for(i=5000; i>0; i--);                       // Delay 50ms   
 154   1          TFT_WriteCmdData(0x0103, 0x3400);      // Internal reference voltage= Vci; 
 155   1              for(i=5000; i>0; i--);                    // Delay 50ms 
 156   1          TFT_WriteCmdData(0x0281, 0x0015);      // Set VDV[4:0] for VCOM amplitude 
 157   1          TFT_WriteCmdData(0x0200, 0x0000);      // Set VCM[5:0] for VCOMH 
 158   1          TFT_WriteCmdData(0x0201, 0x0000);      // Set Frame Rate  
 159   1              for(i=5000; i>0; i--);                          // Delay 50ms 
 160   1      
 161   1          // ----------- Adjust thGamma    Curve ----------// 
 162   1          TFT_WriteCmdData(0x0300, 0x0000); 
 163   1          TFT_WriteCmdData(0x0301, 0x0204); 
 164   1          TFT_WriteCmdData(0x0302, 0x0202); 
 165   1          TFT_WriteCmdData(0x0305, 0x0105); 
 166   1          TFT_WriteCmdData(0x0306, 0x0808); 
 167   1          TFT_WriteCmdData(0x0307, 0x0505); 
 168   1          TFT_WriteCmdData(0x0308, 0x0305); 
 169   1          TFT_WriteCmdData(0x0309, 0x0707); 
 170   1          TFT_WriteCmdData(0x030c, 0x0501); 
 171   1          TFT_WriteCmdData(0x030D, 0x0808);
 172   1               
 173   1          //------------------ SetRAM area ---------------// 
 174   1          TFT_WriteCmdData(0x0210, 0x0000);     // Horizontal GRAM Start Address 
 175   1          TFT_WriteCmdData(0x0211, 0x00EF);     // Horizontal GRAM End Address 
 176   1          TFT_WriteCmdData(0x0212, 0x0000);     // Vertical GRAM Start Address 
 177   1          TFT_WriteCmdData(0x0213, 0x01af);     // Vertical GRAM Start Address 
 178   1          TFT_WriteCmdData(0x0400, 0x3500);     // Gate Scan Line     
 179   1          TFT_WriteCmdData(0x0401, 0x0001);     // NDL,VLE, REV (????)IPS(0000),TN(0001)
C51 COMPILER V9.01   LCD_DRIVE                                                             09/18/2014 15:58:09 PAGE 4   

 180   1          TFT_WriteCmdData(0x0404, 0x0000);     // set scrolling line 
 181   1      
 182   1          //-------------- Partialisplay Control ---------// 
 183   1          TFT_WriteCmdData(0x0500, 0x0000); 
 184   1          TFT_WriteCmdData(0x0501, 0x0000); 
 185   1          TFT_WriteCmdData(0x0502, 0x0000); 
 186   1          TFT_WriteCmdData(0x0503, 0x0000); 
 187   1          TFT_WriteCmdData(0x0504, 0x0000); 
 188   1          TFT_WriteCmdData(0x0505, 0x0000);
 189   1               
 190   1          //-------------- Panel Ctrol -------------------// 
 191   1          TFT_WriteCmdData(0x0010, 0x0010);      // DIVI[1:0];RTNI[4:0]        16clock
 192   1          TFT_WriteCmdData(0x0011, 0x0600);      // NOWI[2:0];SDTI[2:0]         6clock
 193   1              TFT_WriteCmdData(0x0020, 0x0002);          // DIVE[1:0];RTNE[5:0]
 194   1          TFT_WriteCmdData(0x0007, 0x0173);      // 262K color and display ON
 195   1      }
 196          
 197          /****************************************************************************
 198          *函数名：TFT_SetWindow
 199          *输  入：xStart：起始X坐标
 200          *      ：yStart：起始Y坐标 
 201          *      ：xEnd：结束X坐标
 202          *      ：yEnd：结束Y坐标
 203          *输  出：
 204          *功  能：设置要操作的窗口。
 205          ****************************************************************************/     
 206          
 207          void TFT_SetWindow(uint xStart, uint yStart, uint xEnd, uint yEnd)
 208          {
 209   1      
 210   1              TFT_WriteCmdData(0x0210, xStart);        //水平线起始
 211   1              TFT_WriteCmdData(0x0212, yStart);        //垂直线起始
 212   1              TFT_WriteCmdData(0x0211, xEnd);      //水平线结束
 213   1              TFT_WriteCmdData(0x0213, yEnd);      //垂直线结束
 214   1      
 215   1              TFT_WriteCmdData(0x0200, xEnd);
 216   1              TFT_WriteCmdData(0x0201, yEnd);
 217   1              TFT_WriteCmd(0x0202);
 218   1      }
 219          
 220          
 221          /****************************************************************************
 222          *函数名：GUI_Clearcreen
 223          *输  入：backColor：清屏颜色
 224          *输  出：
 225          *功  能：清屏并涂上颜色。
 226          ****************************************************************************/
 227                    
 228          void TFT_ClearScreen(uint color)
 229          {
 230   1              uint i, j;
 231   1      
 232   1              TFT_SetWindow(0, 0, TFT_XMAX, TFT_YMAX);         //作用区域
 233   1              for(i=0; i<= TFT_XMAX; i++)
 234   1              {
 235   2                      for (j=0; j<= TFT_YMAX; j++)
 236   2                      {
 237   3                              //TFT_WriteColorData(color);
 238   3                              TFT_WriteData(color);
 239   3                      }
 240   2              }
 241   1      }
C51 COMPILER V9.01   LCD_DRIVE                                                             09/18/2014 15:58:09 PAGE 5   

 242          
 243          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    871    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
