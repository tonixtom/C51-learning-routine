C51 COMPILER V9.01   TOUCH                                                                 01/06/2015 13:47:37 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TOUCH
OBJECT MODULE PLACED IN touch.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE touch.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"touch.h"
   2          
   3          void TOUCH_SPI_Start(void)
   4          {
   5   1              TOUCH_CLK = 0;
   6   1              TOUCH_CS  = 1;
   7   1              TOUCH_DIN = 1;
   8   1              TOUCH_CLK = 1;
   9   1              TOUCH_CS  = 0;          
  10   1      }
  11          
  12          void TOUCH_SPI_Write(uchar dat)
  13          {
  14   1              uchar i;
  15   1              TOUCH_CLK = 0;
  16   1              for(i=0; i<8; i++)
  17   1              {
  18   2                      TOUCH_DIN = dat >>7;    //放置最高位
  19   2                      dat <<= 1;
  20   2                      TOUCH_CLK = 0;                  //上升沿放置数据
  21   2      
  22   2                      TOUCH_CLK = 1;
  23   2      
  24   2              }
  25   1      }
  26          
  27          uint TOUCH_SPI_Read(void)
  28          {
  29   1              uint i, dat=0;
  30   1              TOUCH_CLK = 0;
  31   1              for(i=0; i<12; i++)             //接收12位数据
  32   1              {
  33   2                      dat <<= 1;
  34   2      
  35   2                      TOUCH_CLK = 1;
  36   2                      TOUCH_CLK = 0;
  37   2      
  38   2                      dat |= TOUCH_DOUT;
  39   2      
  40   2              }
  41   1              return dat;     
  42   1      }
  43          
  44          #define XY_READ_TIMS  10                   //读取的次数
  45          
  46          uint TOUCH_XPT_ReadData(uchar cmd)
  47          {
  48   1              uchar i, j;
  49   1              uint readValue[XY_READ_TIMS];
  50   1              long endValue;
  51   1      
  52   1              TOUCH_CLK = 0;    //先拉低时间
  53   1              TOUCH_CS  = 0;    //选中芯片
  54   1              
  55   1              for(i=0; i<XY_READ_TIMS; i++)           //读取XY_READ_TIMS次结果
C51 COMPILER V9.01   TOUCH                                                                 01/06/2015 13:47:37 PAGE 2   

  56   1              {       
  57   2                      TOUCH_SPI_Write(cmd);  //发送转换命令
  58   2                      //Delay_6us();
  59   2                      for(j=6; j>0; j--);     //延时等待转换结果
  60   2                      TOUCH_CLK = 1;    //发送一个时钟周期，清除BUSY
  61   2                      _nop_();
  62   2                      _nop_();
  63   2                      TOUCH_CLK = 0;
  64   2                      _nop_();
  65   2                      _nop_();
  66   2              
  67   2                      readValue[i] = TOUCH_SPI_Read();
  68   2              }
  69   1              TOUCH_CS = 1; //释放片选
  70   1      
  71   1              //---软件滤波---//
  72   1              //---先大到小排序，除去最高值，除去最低值，求其平均值---//
  73   1              for(i=0; i<XY_READ_TIMS - 1; i++)       //从大到小排序
  74   1              {
  75   2                      for(j= i+1; j<XY_READ_TIMS; j++)
  76   2                      {
  77   3                              if(readValue[i] < readValue[j])
  78   3                              {
  79   4                                      endValue = readValue[i];
  80   4                                      readValue[i] = readValue[j];
  81   4                                      readValue[j] = endValue;
  82   4                              }  
  83   3                      }
  84   2              }
  85   1      
  86   1              endValue = 0;
  87   1              for(i=2; i<XY_READ_TIMS-2; i++)            
  88   1              {
  89   2                      endValue += readValue[i]; 
  90   2              }
  91   1              endValue = endValue/ (XY_READ_TIMS - 4);//求平均值
  92   1      
  93   1              return endValue;
  94   1      }
  95          
  96          
  97          XPT_XY xpt_xy;   //定义一个全局变量保存X、Y的值
  98          uchar TOUCH_XPT_ReadXY(void)
  99          {       
 100   1              uint x1, x2, x, y1, y2, y;
 101   1      
 102   1              TOUCH_SPI_Start();
 103   1              //---分别读两次X值和Y值, 交叉着读可以提高一些读取精度---//
 104   1              x1 = TOUCH_XPT_ReadData(XPT_CMD_X);
 105   1              y1 = TOUCH_XPT_ReadData(XPT_CMD_Y);
 106   1              x2 = TOUCH_XPT_ReadData(XPT_CMD_X);
 107   1              y2 = TOUCH_XPT_ReadData(XPT_CMD_Y);
 108   1      
 109   1              //---求取X值的差值---//
 110   1              if (x1 > x2)
 111   1              {
 112   2                      x = x1 - x2;
 113   2              }
 114   1              else
 115   1              {
 116   2                      x = x2 - x1;
 117   2              }
C51 COMPILER V9.01   TOUCH                                                                 01/06/2015 13:47:37 PAGE 3   

 118   1      
 119   1              //---求取Y值的差值---//
 120   1              if (y1 > y2)
 121   1              {
 122   2                      y = y1 - y2;
 123   2              }
 124   1              else
 125   1              {
 126   2                      y = y2 - y1;
 127   2              }
 128   1      
 129   1              //---判断差值是否大于50，大于就返回0，表示读取失败---//
 130   1              if((x > 50) || (y > 50))  
 131   1              {
 132   2                      return 0;
 133   2              }
 134   1      
 135   1              //---求取两次读取值的平均数作为读取到的XY值---//
 136   1              xpt_xy.x = (x1 + x2) / 2;
 137   1              xpt_xy.y = (y1 + y2) / 2;
 138   1      
 139   1              xpt_xy.x &= 0xFFF0;     //去掉低四位
 140   1              xpt_xy.y &= 0xFFF0;
 141   1               
 142   1              //---确定XY值的范围，用在触摸屏大于TFT时---//
 143   1              if((xpt_xy.x < 100) || (xpt_xy.y > 3900))//3800
 144   1              {
 145   2                      return 0;
 146   2              }
 147   1      
 148   1              return 1;  // 返回1，表示读取成功
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    504    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
